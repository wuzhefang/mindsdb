---
description:
globs:
alwaysApply: false
---
# MindsDB 开发指南

## 代码风格和规范

### Python 代码标准
- 遵循 PEP 8 代码风格
- 使用类型提示 (Type Hints)
- 文档字符串使用 Google 风格
- 最大行长度：120 字符

### 项目结构约定
- 新的集成处理器放在 [mindsdb/integrations/handlers/](mdc:mindsdb/integrations/handlers/)
- 每个处理器必须包含：
  - `__init__.py` - 处理器入口
  - `handler.py` - 核心实现
  - `README.md` - 使用文档
  - `requirements.txt` - 依赖清单

### 测试规范
- 单元测试位于 [tests/unit/](mdc:tests/unit/)
- 集成测试位于 [tests/integration/](mdc:tests/integration/)
- 测试文件命名：`test_*.py`
- 使用 pytest 框架

## 提交规范

### Git 提交信息格式
```
<类型>(<范围>): <描述>

<详细说明>

<相关问题>
```

### 提交类型
- `feat`: 新功能
- `fix`: 修复 bug
- `docs`: 文档更新
- `style`: 代码格式调整
- `refactor`: 代码重构
- `test`: 测试相关
- `chore`: 构建或工具链更新

### 分支策略
- `main`: 主分支，稳定版本
- `feature/*`: 新功能分支
- `fix/*`: 修复分支
- `docs/*`: 文档分支

## 性能和安全

### 性能考虑
- 使用缓存机制，参考 [mindsdb/utilities/cache.py](mdc:mindsdb/utilities/cache.py)
- 数据库连接池管理
- 异步处理大数据集

### 安全最佳实践
- 认证和授权使用 [mindsdb/utilities/auth.py](mdc:mindsdb/utilities/auth.py)
- 敏感信息不得硬编码
- 输入验证和 SQL 注入防护

## 依赖管理

### 依赖文件位置
- 核心依赖: [requirements/requirements.txt](mdc:requirements/requirements.txt)
- 开发依赖: [requirements/requirements-dev.txt](mdc:requirements/requirements-dev.txt)
- 特定组件依赖在各自目录下的 `requirements.txt`

### 版本管理
- 使用固定版本号
- 定期更新依赖版本
- 新依赖需要在 PR 中说明原因
